definition

module org/sugarj/stdlib/Common
imports org/sugarj/stdlib/LayoutSugar
exports

  context-free start-symbols ToplevelDeclaration


module org/sugarj/stdlib/LayoutSugar
imports org/sugarj/languages/Sdf2
exports
  lexical syntax
    %% Lexical insertion recovery rules             
                                        -> ")"      {recover, cons("INSERTION")}
                                        -> "layout" {recover, cons("INSERTION")}


  context-free syntax
    "layout" "(" LayoutConstraint ")" -> Sdf2ATermAttribute {avoid, cons("LayoutConstraint")}
    Sdf2IntCon                        -> LayoutConstraint   {cons("LayoutInt")}
    "(" LayoutConstraint ")" -> LayoutConstraint {bracket}

  context-free priorities
    LayoutConstraint "." Sdf2AFun -> LayoutConstraint {cons("LayoutSelect")} >
    "!" LayoutConstraint -> LayoutConstraint {cons("LayoutNot")} >
    {
      LayoutConstraint ">" LayoutConstraint -> LayoutConstraint {cons("LayoutGT"), right}
      LayoutConstraint ">=" LayoutConstraint -> LayoutConstraint {cons("LayoutGE"), right}
      LayoutConstraint "==" LayoutConstraint -> LayoutConstraint {cons("LayoutEQ"), right}
      LayoutConstraint "<=" LayoutConstraint -> LayoutConstraint {cons("LayoutLE"), right}
      LayoutConstraint "<" LayoutConstraint -> LayoutConstraint {cons("LayoutLT"), right}
    } >
    {
      LayoutConstraint "&&" LayoutConstraint -> LayoutConstraint {cons("LayoutAnd"), right}
      LayoutConstraint "||" LayoutConstraint -> LayoutConstraint {cons("LayoutOr"), right}
    }
