module stdlib-generation-types
imports
  extract-generation-type
rules
  stdlib-generation-type =
      ?("concat_strings_0_0", [], [], list)
    ; <unknown-or(concat-string-types)> list

  stdlib-generation-type =
      ?("map_1_0", [strat], [], list)
    ; <unknown-or(map(lift-strat(|strat)))> list

  stdlib-generation-type =
      ?("collect_1_0", [strat], [], list)
    ; <unknown-or(collect(lift-strat(|strat)))> list

  stdlib-generation-type =
      ?("collect_all_1_0", [strat], [], list)
    ; <unknown-or(collect-all-types(lift-strat(|strat)))> list

  stdlib-generation-type =
      ?("foldr_2_0", [strat1, strat2], [], list)
    ; <unknown-or(foldr(lift-strat(|strat1), lift-strat(|strat2)))> list

  stdlib-generation-type =
    fatal-err(|"Unknown stdlib function: ")

  lift-strat(|strat) = unknown-or(with-current-type(<extract-generation-type> strat))

rules
  concat-string-types = ?[]; !Str([])
  concat-string-types = ?[Str(ss)]; !Str(ss)
  concat-string-types = ?[Unknown(v)]; !Str([Unknown(v)])
  concat-string-types = 
      ?[Str(ss) , Str(ss2) | list]
    ; <concat-string-types> [Str(<conc> (ss, ss2)) | list]
  concat-string-types = 
      ?[Str(ss) , Unknown(v) | list]
    ; <concat-string-types> [Str(<conc> (ss, [Unknown(v)])) | list]
  concat-string-types = 
      ?[Unknown(v) , Str(ss) | list]
    ; <concat-string-types> [Str(<conc> ([Unknown(v)], ss)) | list]

  collect-all-types(s) = Empty()
  collect-all-types(s) = ?Unknown(name); (![<s>] <+ ![])
  collect-all-types(s) = ?Alt(t1,t2)
                       ; <alternative-types> (<collect-all-types(s)> t1, <collect-all-types(s)> t2)
  collect-all-types(s) = where((![<s>] <+ ![]) => xs)
                       ; ?_#(<map(collect-all-types(s))>); concat-types => ys
                       ; <conc-types> (xs, ys)
  collect-all-types(s) = fatal-err(|"collect-all-types is stuck: ")

  concat-types = []
  concat-types = ?[Empty() | <concat-types>]
  concat-types = ?[list | rest]
               ; where(<is-list> list)
               ; <conc-types> (list, rest)
  concat-types = ?[Alt(t1,t2) | rest]
               ; <alternative-types> (<concat-types> [t1 | rest], <concat-types> [t2 | rest])
  concat-types = fatal-err(|"concat-types is stuck: ")

  conc-types = (is-list,is-list); conc
  conc-types = ?(Empty(),<id>)
  conc-types = ?(<id>,Empty())
  conc-types = ?(Alt(t1,t2),list)
             ; <alternative-types> (<conc-types> (t1, list), <conc-types> (t2, list))
  conc-types = ?(list, Alt(t1, t2))
             ; <alternative-types> (<conc-types> (list, t1), <conc-types> (list, t2))
  conc-types = fatal-err(|"conc-types is stuck: ")