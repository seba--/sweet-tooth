module org/sugarj/java/Renaming
imports
  libstratego-lib
  org/sugarj/languages/Java
  org/sugarj/languages/SugarJ

rules
  
  rename-decl(|renamings) = 
    rename-extensiondec(|renamings) <+ 
    rename-transdec(|renamings) <+ 
    rename-modeldec(|renamings) <+
    rename-languagedec(|renamings) <+
    id
    
  rename-extensiondec(|renamings) = oncetd( \ ExtensionDecHead(mods, Id(from)) -> ExtensionDecHead(mods, Id(to))  
                                          where <hashtable-get(|from)> renamings => to \)
  rename-transdec(|renamings) = oncetd( \ TransDecHead(mods, Id(from)) -> TransDecHead(mods, Id(to))  
                                          where <hashtable-get(|from)> renamings => to \)
  rename-modeldec(|renamings) = oncetd( \ ModelDecHead(mods, Id(from), meta) -> ModelDecHead(mods, Id(to), meta)  
                                          where <hashtable-get(|from)> renamings => to \)

  rename-languagedec(|renamings) = topdown(try(rename-java(|renamings)))
  
rules
  rename-java(|renamings) :
       t@ClassDecHead(mods, Id(from), typeParams, super, interface)
    -> ClassDecHead(mods, Id(to), typeParams, super, interface)
  where <hashtable-get(|from)> renamings => to
    
  rename-java(|renamings) :
       InterfaceDecHead(mods, Id(from), typeParams, interface)
    -> InterfaceDecHead(mods, Id(to), typeParams, interface) 
  where <hashtable-get(|from)> renamings => to 

  rename-java(|renamings) :
       EnumDecHead(mods, Id(from), interface)
    -> EnumDecHead(mods, Id(to), interface) 
  where <hashtable-get(|from)> renamings => to 
    
  rename-java(|renamings) :
       AnnoDecHead(mods, Id(from))
    -> AnnoDecHead(mods, Id(to)) 
  where <hashtable-get(|from)> renamings => to 
    
  rename-java(|renamings) :
       ConstrDecHead(mods, typeParams, Id(from), params, throws)
    -> ConstrDecHead(mods, typeParams, Id(to), params, throws)
  where <hashtable-get(|from)> renamings => to 

  rename-java(|renamings) :
       TypeName(Id(from))
    -> TypeName(Id(to))
  where <hashtable-get(|from)> renamings => to 

  rename-java(|renamings) :
       TypeName(qual, Id(from))
    -> TypeName(qual, Id(to))
  where
    <pkg-list> qual => pkgs; 
    <hashtable-get(|(pkgs, from))> renamings => to 

  rename-java(|renamings) :
       PackageOrTypeName(Id(from))
    -> PackageOrTypeName(Id(to))
  where <hashtable-get(|from)> renamings => to 

  rename-java(|renamings) :
       PackageOrTypeName(qual, Id(from))
    -> PackageOrTypeName(qual, Id(to))
  where
    <pkg-list> qual => pkgs; 
    <hashtable-get(|(pkgs, from))> renamings => to 

  rename-java(|renamings) :
       AmbName(Id(from))
    -> AmbName(Id(to))
  where <hashtable-get(|from)> renamings => to 


rules
  pkg-list : PackageOrTypeName(Id(pkg)) -> [pkg]
  pkg-list : PackageOrTypeName(rest, Id(pkg)) -> <conc> (<pkg-list> rest, [pkg])
